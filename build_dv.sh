#!/bin/bash
# builds C++ version of DV server
# also compiles the present Lua installation
# please note that the Lua Makefile is modified to take
# $LUA_TARGET_PATH as input for INSTALL_TOP instead of /usr/local
# for compilation on macOS, use script with this argument: mac
# otherwise, a Linux system (or compatible) is assumed
# uses getopt code generated by gengetopt.
# v1.6 2017-09-15 Pirmin Schmid
module switch PrgEnv-cray PrgEnv-gnu 2> /dev/null
module list 2> /dev/null
current_path=$(pwd)
code_source_path=$current_path/driver
template_source_path=$current_path/templates
dv_config_source_path=$current_path/dv_config_files
target_path=$current_path/bin
build_path=$target_path/build
lua_source_path=$current_path/lua
export LUA_TARGET_PATH=$target_path/lua
export LUA_INCLUDE_PATH=$code_source_path/lua
export LUA_LIB_PATH=$LUA_TARGET_PATH/lib
#
if [ -f $lua_source_path/Makefile ]; then
    echo "Lua Makefile detected."
else
    echo "Lua Makefile not found. Please use ./install_lua.sh first."
    exit 1
fi
#
mkdir -p $target_path 
rm -rf $target_path 2>/dev/null
mkdir -p $target_path
# please leave this triplet of mkdir, rm, mkdir as is (please ask me in case of questions)
mkdir -p $build_path
rm -r $build_path/* 2>/dev/null
mkdir -p $LUA_INCLUDE_PATH
# no rm within the source code region (safety)
#
echo "compilation of Lua from $lua_source_path to $LUA_TARGET_PATH"
cp -r $lua_source_path $LUA_TARGET_PATH
cd $LUA_TARGET_PATH
make clean
if [ "$1" = "mac" ]; then
    make macosx
else
    make linux
fi
make install
echo "installing of includes to $LUA_INCLUDE_PATH; liblua.a is in $LUA_LIB_PATH"
cp $LUA_TARGET_PATH/include/* $LUA_INCLUDE_PATH/
#
echo "compilation of SDaVi driver dv from $code_source_path in $build_path"
cd $build_path
cmake $code_source_path
make -j 8 dv
make -j 8 stop_dv
make -j 8 dv_status
make -j 8 check_dv_config_file
cd $current_path
#
echo "installing binaries to $target_path"
cp $build_path/dv $target_path/
cp $build_path/stop_dv $target_path/
cp $build_path/dv_status $target_path/
cp $build_path/check_dv_config_file $target_path/
echo "installing template files from $template_source_path to $target_path"
cp $template_source_path/*.job $target_path/ 
cp $template_source_path/*.par $target_path/
cp $template_source_path/*.sbatch $target_path/
cp $template_source_path/*.sh $target_path/
echo "installing dv config files from $dv_config_source_path to $target_path"
cp $dv_config_source_path/* $target_path
echo "complete"
